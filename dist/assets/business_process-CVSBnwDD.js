import{I as h,r as c,V as B,c as f,o as N,W as b,b as I,e as S,f as A,m as t,E as D,t as l}from"./index-BlCUlzV6.js";import{M as C,C as E}from"./CustomPaletteProvider-CKIaJx6d.js";import{_ as L}from"./PageWrapper-DTMdDcJF.js";import"./hooks.module-Bz5tw8Tg.js";const X={class:"flex flex-col h-full"},R={style:{display:"flex","justify-content":"center"}},$={style:{"font-size":"20px","font-weight":"bold"}},k={__name:"business_process",setup(O){const i="http://127.0.0.1:8000/bpm/process/",m=c(null),r=c(null),p=B(),a=c(Number(p.params.processId)),s=c([]),g=async()=>{try{const e=await l.get(`${i}`);s.value=Array.isArray(e.data)?e.data:[],console.log("Processes loaded:",s.value)}catch(e){console.error("Ошибка загрузки процессов:",e),s.value=[]}},d=async()=>{if(!a.value)return console.warn("Process ID не указан:",a.value),!1;try{const o=(await l.get(`${i}${a.value}/`)).data;if(!o.bpmn_xml)throw new Error("bpmn_xml ID не найден");const v=(await l.get(`undefined${o.bpmn_xml}/`)).data.xml;if(!v)throw new Error("bpmn_xml.xml не найден");await r.value.importXML(v),console.log("BPMN загружен для процесса:",a.value);const P=s.value.find(M=>M.id===a.value);return P?P.bpmn_xml=o.bpmn_xml:s.value.push(o),r.value.get("canvas").zoom("fit-viewport"),!0}catch(e){return console.error("Ошибка загрузки XML:",e),!1}},u=async()=>{await r.value.importXML(`<?xml version="1.0" encoding="UTF-8"?>
    <bpmn:definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                      xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                      id="Definitions_1"
                      targetNamespace="http://bpmn.io/schema/bpmn">
      <bpmn:process id="Process_1" isExecutable="true">
      </bpmn:process>
      <bpmndi:BPMNDiagram id="BPMNDiagram_1">
        <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_1">
        </bpmndi:BPMNPlane>
      </bpmndi:BPMNDiagram>
    </bpmn:definitions>`),console.log("Загружена пустая диаграмма"),r.value.get("canvas").zoom("fit-viewport")},w=f(()=>Array.isArray(s.value)?s.value.filter(e=>e.bpmn_xml):(console.warn("Processes is not an array:",s.value),[])),_=f(()=>{if(!Array.isArray(s.value))return console.warn("Processes is not an array:",s.value),{};const e=s.value.find(o=>o.id===a.value);return console.log("Selected Process:",e),e||{}});N(async()=>{r.value=new C({container:m.value,keyboard:{bindTo:document},additionalModules:[{paletteProvider:["value",null]},{__init__:["customPaletteProvider"],customPaletteProvider:["type",E]}]}),await g(),await d()||await u(),console.log("Process ID:",a.value),console.log("Processes:",s.value),console.log("Processes type:",Array.isArray(s.value)?"Array":typeof s.value),console.log("Selected Process:",_.value),console.log("Filtered Processes:",w.value)}),b(a,async e=>{console.log("Selected Process ID changed:",e),await d()||await u()}),b(()=>p.params.processId,e=>{a.value=Number(e)});const x=async()=>{try{const{xml:e}=await r.value.saveXML({format:!0});console.log("Сохранённый XML:",e);const o=s.value.find(n=>n.id===a.value);if(!o)throw new Error("Процесс не найден");if(o.bpmn_xml){const n=await l.patch(`undefined${o.bpmn_xml}/`,{xml:e});console.log("Диаграмма обновлена на сервере:",n.data)}else{const n=await l.post("undefined",{process_id:a.value,xml:e});console.log("Диаграмма создана на сервере:",n.data),o.bpmn_xml=n.data.id}}catch(e){console.error("Ошибка сохранения:",e)}},y=()=>{console.log("Запуск процесса...")};return(e,o)=>(S(),I(L,null,{default:A(()=>[t("div",X,[t("div",R,[t("h1",$,D(_.value.name||"Процесс не выбран"),1)]),t("div",{ref_key:"bpmnContainer",ref:m,class:"w-full h-[600px] border"},null,512),t("div",{class:"btn"},[t("button",{onClick:x,class:"mt-2 p-2 bg-blue-500 text-white self-start"}," Сохранить процесс "),o[0]||(o[0]=t("br",null,null,-1)),t("button",{onClick:y,class:"mt-2 p-2 bg-green-500 text-white self-start"}," Запустить процесс ")])])]),_:1}))}},U=h(k,[["__scopeId","data-v-b45258bc"]]);export{U as default};
